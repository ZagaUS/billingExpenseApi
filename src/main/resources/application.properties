quarkus.http.port=8083
quarkus.http.host=0.0.0.0
quarkus.mongodb.connection-string=mongodb+srv://devteam:Zagateam2023*@applicationcluster.tvbngn1.mongodb.net/test
# quarkus.mongodb.connection-string=mongodb+srv://admin:Admin123@democluster.lmoikw5.mongodb.net/BillingInvoice
# quarkus.mongodb.connection-string =mongodb://localhost:27017/BillingInvoice

kafka.bootstrap.servers=localhost:9092

#kafka mail producer configuration
mp.messaging.outgoing.Invoice-out.connector=smallrye-kafka
mp.messaging.outgoing.Invoice-out.topic=TriggerWorkflow
mp.messaging.outgoing.Invoice-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer   
mp.messaging.outgoing.Invoice-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer


#kafka mail consumer configuration
mp.messaging.incoming.Invoice-in.connector=smallrye-kafka
mp.messaging.incoming.Invoice-in.topic=TriggerWorkflow
mp.messaging.incoming.Invoice-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer   
mp.messaging.incoming.Invoice-in.value.deserializer=zaga.biling.invoice.KafkaImpl.Consumer.InvoiceDeserializer

quarkus.rest-client.pdf-api.url=http://localhost:8080/Zaga/document-service
quarkus.rest-client.pdf-api.scope=javax.inject.Singleton

#CORS 
quarkus.http.cors = true
quarkus.http.cors.origins = *
quarkus.http.cors.headers = Authorization, Content-Type, X-Requested-With
quarkus.http.cors.methods=GET, POST, PUT, DELETE